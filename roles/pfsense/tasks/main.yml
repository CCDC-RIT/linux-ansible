---
- name: Backup Startup IPTables Configuration
  command: iptables-save > /etc/iptables/prebaked_rules.v4

- name: Allow MySQL to spy
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: 3306
    jump: ACCEPT
    comment: "Allow MySQL to spy"
  when: inventory_hostname == "spy"

- name: Allow Grafana to satellite
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: 3000
    jump: ACCEPT
    comment: "Allow Grafana to satellite"
  when: inventory_hostname == "satellite"

- name: Allow FTP to vault
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: 21
    jump: ACCEPT
    comment: "Allow FTP to vault"
  when: inventory_hostname == "vault"

- name: Allow IMAP and SMTP to wiretap
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
    comment: "Allow IMAP/SMTP to wiretap"
  loop: "{{ imap_smtp }}"
  when: inventory_hostname == "wiretap"
  vars:
    imap_smtp:
      - 143
      - 993
      - 25
      - 587

- name: Allow HTTP/S to propaganda
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
    comment: "Allow HTTP/S to propaganda"
  loop: "{{ web }}"
  when: inventory_hostname == "propaganda"
  vars:
    web:
      - 80
      - 443

- name: Allow Wazuh between all machines
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: 1514
    jump: ACCEPT
    comment: "Allow Wazuh between all machines"

- name: Allow SSH between all machines
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    destination_port: 22
    jump: ACCEPT
    comment: "Allow SSH between all machines"

- name: Allow all Management IPs
  iptables:
    chain: INPUT
    source: "{{ item }}"
    protocol: tcp
    jump: ACCEPT
    comment: "Allow Management"
  loop: "{{ management }}"
  vars:
    management:
      - "172.16.1.0/24"
      - "172.29.2.0/23"

- name: Allow all DataDog IPs
  iptables:
    chain: INPUT
    source: "{{ item }}"
    protocol: tcp
    jump: ACCEPT
    comment: "Allow DataDog"
  loop: "{{ lookup('file', 'datadog_ipv4.txt').splitlines() }}"

- name: Block everything else
  iptables:
    chain: INPUT
    source: "0.0.0.0/0"
    protocol: tcp
    jump: DROP
    comment: "Implicit deny all"

- name: Backup IPTables Configuration After Ansible
  command: iptables-save > /etc/iptables/secure_rules.v4
