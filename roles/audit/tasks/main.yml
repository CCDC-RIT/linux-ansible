---
# to save ansible output in a single log on the control node, set the log_path configuration file (ansible.cfg) setting
# to save output in separate logs, one on each managed node, set the no_target_syslog and syslog_facility settings in ansible.cfg -- this is probably what we prefer
##### BASIC #####
- name: Copy append_to_audit_log.sh
  copy:
    src: append_to_audit_log.sh
    dest: /root/append_to_audit_log.sh 
    mode: 0755

- name: Display Aliases
  shell: alias | bash /root/append_to_audit_log.sh "Display Aliases" 
  register: task_output
- name: LOG Display Aliases
  shell: bash /root/append_to_audit_log.sh "Display Aliases" "{{ task_output.stdout }}"

- name: Check for Shims
  shell: |
    diff /bin/false /bin/sh
    diff /bin/false /bin/bashaud
    diff /usr/sbin/nologin /bin/sh
    diff /usr/sbin/nologin /bin/bash
    diff /usr/bin/passwd /bin/passwd
    diff /usr/bin/ls /bin/ls 
    diff /usr/bin/sudo /bin/sudo
  register: shims
  ignore_errors: true
- name: LOG Check for Shims
  shell: bash /root/append_to_audit_log.sh "Check for Shims" "{{ shims.stdout }}"

# SSH Keys
- name: Check SSH Keys Config
  shell: cat /root/ssh/sshd_config | grep -i AuthorizedKeysFile
  register: ssh1
  ignore_errors: true
- name: LOG Check SSH Keys Config
  shell: bash /root/append_to_audit_log.sh "Check SSH Keys Config" "{{ ssh1.stdout }}"

- name: List User's Authorized SSH Keys
  shell: head -n 20 /home/*/.ssh/authorized_keys*
  register: ssh2
- name: LOG List User's Authorized SSH Keys
  shell: bash /root/append_to_audit_log.sh "List User's Authorized SSH Keys" "{{ ssh2.stdout }}"

- name: List Root's Authorized SSH Keys
  shell: head -n 20 /root/.ssh/authorized_keys*
  register: ssh3
- name: LOG List Root's Authorized SSH Keys
  shell: bash /root/append_to_audit_log.sh "List Root's Authorized SSH Keys" "{{ ssh3.stdout }}"

- name: Currently Logged In
  shell: who
  register: who_output
- name: LOG Currently Logged Iclearn
  shell: bash /root/append_to_audit_log.sh "Currently Logged In" "{{ who_output.stdout }}"

- name: Currently Active Sessions
  shell: w
  register: w_output
- name: LOG Currently Active Sessions # this just like fails but only sometimes????
  shell: bash /root/append_to_audit_log.sh "Currently Active Sessions" "{{ w_output.stdout }}"

- name: Login History
  shell: last | grep -Ev 'system' | head -n 20
  register: loginhistory
- name: LOG Login History
  shell: bash /root/append_to_audit_log.sh "Login History" "{{ loginhistory.stdout }}"

- name: Current Network Listening
  shell: ss -tulpnw
  register: networklistening
- name: LOG Current Network Listening
  shell: bash /root/append_to_audit_log.sh "Current Network Listening" "{{ networklistening.stdout }}"

- name: lsof Remote
  shell: lsof -i
  register: lsofremote
- name: LOG lsof Remote
  shell: bash /root/append_to_audit_log.sh "lsof Remote" "{{ lsofremote.stdout }}"

- name: Potential Rootkit Signs
  shell: |
    dmesg | grep taint
    env | grep -i 'LD'
  register: rootkit
  ignore_errors: true
- name: LOG Potential Rootkit Signs
  shell: bash /root/append_to_audit_log.sh "Potential Rootkit Signs" "{{ rootkit.stdout }}"

- name: Mounted Processes
  shell: mount | grep "proc"
  register: mountedprocs
- name: LOG Mounted Processes
  shell: bash /root/append_to_audit_log.sh "Mounted Processes" "{{ mountedprocs.stdout }}"


##### VERBOSE #####

- name: Auto Runs
  shell: |
    cat /etc/crontab | grep -Ev '#|PATH|SHELL'
    cat /etc/cron.d/* | grep -Ev '#|PATH|SHELL'
    find /var/spool/cron/crontabs/ -printf '%p\n' -exec cat {} \;
    systemctl list-timers
  register: autoruns
- name: LOG Auto Runs
  shell: bash /root/append_to_audit_log.sh "Auto Runs" "{{ autoruns.stdout }}"

- name: lsof Raw
  shell: |
    lsof | grep -i -E 'raw|pcap' || true
    lsof | grep /proc/sys/net/ipv4 || true
  register: lsofraw
- name: LOG lsof Raw
  shell: bash /root/append_to_audit_log.sh "lsof Raw" "{{ lsofraw.stdout }}"

- name: Processes
  shell: ps af
  register: procs
- name: LOG Processes
  copy:
    content: "{{ procs.stdout }}"
    dest: /opt/audit_log.txt

- name: Poisoned Networking
  shell: |
    cat /etc/nsswitch.conf
    cat /etc/hosts
    cat /etc/resolv.conf | grep -Ev '#|PATH|SHELL'
    ip netns list
    ip route
  register: poisonednetworking
- name: LOG Poisoned Networking
  copy:
    content: "{{ poisonednetworking.stdout }}"
    dest: /opt/audit_log.txt
  # shell: bash /root/append_to_audit_log.sh "Poisoned Networking" "{{ poisonednetworking.stdout }}"

- name: IPs and MACs
  shell: |
    ip -c route | grep "default"
    echo -e ""
    ip -br -c a
    echo -e "\n[MAC]:"
    ip -br -c link
  register: ips_macs
- name: LOG IPs and MACs
  shell: bash /root/append_to_audit_log.sh "IPs and MACs" "{{ ips_macs.stdout }}"

- name: Auth Backdoors
  shell: |
    cat /etc/sudoers | grep NOPASS
    cat /etc/sudoers | grep !AUTH
    find / -type f \( -name ".rhosts" -o -name ".shosts" -o -name "hosts.equiv" \) -exec ls -l {} \;
  register: authbackdoors
- name: LOG Auth Backdoors
  shell: bash /root/append_to_audit_log.sh "Auth Backdoors" "{{ authbackdoors.stdout }}"

- name: Files Modified in Last 10 Min
  shell: |
    find /etc -xdev -mmin -10 -ls 2> /dev/null
    find /home -xdev -mmin -10 -ls 2> /dev/null
    find /root -xdev -mmin -10 -ls 2> /dev/null
    find /bin -xdev -mmin -10 -ls 2> /dev/null
    find /sbin -xdev -mmin -10 -ls 2> /dev/null
  register: filesmodified
- name: LOG Files Modified in Last 10 Min
  shell: bash /root/append_to_audit_log.sh "Files Modified in Last 10 Min" "{{ filesmodified.stdout }}"

- name: Repositories
  shell: cat /etc/apt/sources.list | grep -Ev "##|#"
  register: repos
- name: LOG Repositories
  shell: bash /root/append_to_audit_log.sh "Repositories" "{{ repos.stdout }}"

# - name: Malware? (Debian)
#   shell: |
#     dpkg -l | grep "sniff"
#     dpkg -l | grep "packet" 
#     dpkg -l | grep "wireless" 
#     dpkg -l | grep "pen"
#     dpkg -l | grep "test" 
#     dpkg -l | grep "password" 
#     dpkg -l | grep "crack"
#     dpkg -l | grep "spoof" 
#     dpkg -l | grep "brute" 
#     dpkg -l | grep "log" 
#     dpkg -l | grep "key"
#     dpkg -l | grep "network" 
#     dpkg -l | grep "map" 
#     dpkg -l | grep "server"
#     dpkg -l | grep "CVE" 
#     dpkg -l | grep "exploit" 
#   when: ansible_os_family == "Debian"
#   register: malware
# - name: LOG Malware? (Debian)
#   shell: bash /root/append_to_audit_log.sh "Malware? (Debian)" "{{ malware.stdout }}"

# External Audit Scripts
- name: Copy Linpeas
  copy:
    src: linpeas.sh
    dest: /tmp/linpeas.sh

- name: Run Linpeas Audit
  shell: curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh > linpeas.txt
  # ignore_errors: true

- name: Run Lynis Audit
  shell: lynis audit system > lynis.txt
  # ignore_errors: true

- name: Store Audit Script Output onto local Ansible Box
  fetch:
    src: audit_log.txt
    dest: /opt/inventory/{{ ansible_hostname }}-audit.txt
    flat: yes
    fail_on_missing: no

- name: Store Linpeas Output onto local Ansible Box
  fetch:
    src: linpeas.txt
    dest: /opt/inventory/{{ ansible_hostname }}-linpeas.txt
    flat: yes
    fail_on_missing: no
    
- name: Store Lynis Output onto local Ansible Box
  fetch:
    src: lynis.txt
    dest: /opt/inventory/{{ ansible_hostname }}-lynis.txt
    flat: yes
    fail_on_missing: no