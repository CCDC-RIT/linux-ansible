#call each sections main here
#have this get executed by the main playbook

#reinstall core services (pam, ssh, etc.)

- name: Gather ansible facts
  ansible.builtin.package_facts:

- name: Check OS version and family
  ansible.builtin.fail:
    msg: "This role can only be run against Ubuntu 22. {{ ansible_facts.distribution }} {{ ansible_facts.distribution_major_version }} is not supported."
  when: ansible_facts.distribution != 'Ubuntu'

# we need to set something up a register earlier in our playbook that this can read to know if it is a kube node or a container
- name: Setup rules if container
  block:
    - name: Discover and set container variable if required
      ansible.builtin.set_fact:
        system_is_container: true

    - name: Load variable for container
      ansible.builtin.include_vars:
        file: "{{ container_vars_file }}"

    - name: Output if discovered is a container
      when: system_is_container
      ansible.builtin.debug:
        msg: system has been discovered as a container
  when: is_target_container

- name: "CIS Benchmark | prelims"
  ansible.builtin.import_tasks:
    file: prelim.yml

- name: "CIS Benchmark | section 1"
  ansible.builtin.import_tasks:
    file: cis_sections/section_1/main.yml
  when: section_1

- name: "CIS Benchmark | section 3"
  ansible.builtin.import_tasks:
    file: cis_sections/section_3/main.yml
  when: section_3

- name: "CIS Benchmark | section 5"
  ansible.builtin.import_tasks:
    file: cis_sections/section_5/main.yml
  when: section_5

- name: "CIS Benchmark | section 6"
  ansible.builtin.import_tasks:
    file: cis_sections/section_6/main.yml
  when: section_6

- name: "CIS Benchmark | section 7"
  ansible.builtin.import_tasks:
    file: cis_sections/section_7/main.yml
  when: section_7

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: ClamAV
  ansible.builtin.import_tasks: 
    file: clamav.yml

- name: SSH
  ansible.builtin.import_tasks:
    file: ssh.yml

- name: Reboot system
  block:
    - name: Reboot system if not skipped
      ansible.builtin.reboot:
      when:
        - change_requires_reboot

    - name: Warning a reboot required but skip option set
      ansible.builtin.debug:
        msg: "Warning!! changes have been made that require a reboot to be implemented but skip reboot was set - Can affect compliance check results"
      changed_when: true
      when:
        - change_requires_reboot
  tags: always