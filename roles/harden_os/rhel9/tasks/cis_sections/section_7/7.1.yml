---

- name: "7.1.1 | PATCH | Ensure permissions on /etc/passwd are configured"
  when:
    - rule_7_1_1
  ansible.builtin.file:
    path: /etc/passwd
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.2 | PATCH | Ensure permissions on /etc/passwd- are configured"
  when:
    - rule_7_1_2
  ansible.builtin.file:
    path: /etc/passwd-
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.3 | PATCH | Ensure permissions on /etc/group are configured"
  when:
    - rule_7_1_3
  ansible.builtin.file:
    path: /etc/group
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.4 | PATCH | Ensure permissions on /etc/group- are configured"
  when:
    - rule_7_1_4
  ansible.builtin.file:
    path: /etc/group-
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.5 | PATCH | Ensure permissions on /etc/shadow are configured"
  when:
    - rule_7_1_5
  ansible.builtin.file:
    path: /etc/shadow
    owner: root
    group: root
    mode: 'ugo-rwx'

- name: "7.1.6 | PATCH | Ensure permissions on /etc/shadow- are configured"
  when:
    - rule_7_1_6
  ansible.builtin.file:
    path: /etc/shadow-
    owner: root
    group: root
    mode: 'ugo-rwx'

- name: "7.1.7 | PATCH | Ensure permissions on /etc/gshadow are configured"
  when:
    - rule_7_1_7
  ansible.builtin.file:
    path: /etc/gshadow
    owner: root
    group: root
    mode: 'ugo-rwx'

- name: "7.1.8 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  when:
    - rule_7_1_8
  ansible.builtin.file:
    path: /etc/gshadow-
    owner: root
    group: root
    mode: 'ugo-rwx'

- name: "7.1.9 | PATCH | Ensure permissions on /etc/shells are configured"
  when:
    - rule_7_1_9
  ansible.builtin.file:
    path: /etc/shells
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.10 | PATCH | Ensure permissions on /etc/security/opasswd are configured"
  when:
    - rule_7_1_10
  ansible.builtin.file:
    path: /etc/security/opasswd
    owner: root
    group: root
    mode: 'u-x,go-wx'

- name: "7.1.11 | PATCH | Ensure world writable files and directories are secured"
  when:
    - rule_7_1_11
  block:
    - name: "7.1.11 | Get list of world-writable files"
      ansible.builtin.shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
      failed_when: false
      changed_when: false
      register: discovered_world_writable

    - name: "7.1.11 | Adjust world-writable files if they exist (Configurable)"
      when:
        - discovered_world_writable.stdout_lines is defined
        - discovered_world_writable.stdout_lines | length > 0
        - no_world_write_adjust
      ansible.builtin.file:
        path: '{{ item }}'
        mode: 'o-w'
        state: touch
      loop: "{{ discovered_world_writable.stdout_lines }}"

    - name: "7.1.11 | Adjust world-writable directories add sticky bit"
      ansible.builtin.shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -o+w ! -perm -1002 2>/dev/null | xargs chmod a+t
      failed_when: discovered_set_stickybit.rc not in [ 0, 123 ]
      changed_when: discovered_set_stickybit.rc == 0
      register: discovered_set_stickybit

- name: "7.1.12 | PATCH | Ensure no files or directories without an owner and a group exist"
  when:
    - rule_7_1_12
  block:
    - name: "7.1.12 | Get list files or directories"
      ansible.builtin.command: find {{ exclude_unowned_search_path }} {{ item.mount }} -xdev \( -nouser -o -nogroup \) -not -fstype nfs
      changed_when: false
      failed_when: false
      check_mode: false
      register: discovered_unowned_files
      with_items:
        - "{{ ansible_facts.mounts }}"
      loop_control:
        label: "{{ item.mount }}"

    - name: "7.1.12 | Flatten no_user_items results for easier use"
      ansible.builtin.set_fact:
        discovered_unowned_files_flatten: "{{ discovered_unowned_files.results | selectattr('stdout_lines', 'defined') | map(attribute='stdout_lines') | flatten }}"

    - name: "7.1.12 | Alert on unowned files and directories"
      when:
        - not ownership_adjust
        - discovered_unowned_files_flatten | length > 0
      ansible.builtin.debug:
        msg:
          - "Warning!! You have unowned files and are configured to not auto-remediate for this task"
          - "Please review the files/directories below and assign an owner"
          - "{{ discovered_unowned_files_flatten }}"

    - name: "7.1.12 | PATCH | Ensure no files or directories without an owner and a group exist | Set files/directories to configured owner and group"
      when:
        - ownership_adjust
        - discovered_unowned_files_flatten | length > 0
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ unowned_owner }}"
        group: "{{ unowned_group }}"
      with_items:
        - "{{ discovered_unowned_files_flatten }}"

- name: "7.1.13 | AUDIT | Ensure SUID and SGID files are reviewed"
  when:
    - rule_7_1_13
  block:
    - name: "7.1.13 | Find SUID and SGID"
      ansible.builtin.command: find {{ item.mount }} -xdev -type f -perm \( -02000 or -04000 \) -not -fstype nfs
      changed_when: false
      failed_when: false
      check_mode: false
      register: discovered_suid_sgid_files
      with_items:
        - "{{ ansible_facts.mounts }}"
      loop_control:
        label: "{{ item.mount }}"

    - name: "7.1.13 | Flatten suid_executables results for easier use"
      ansible.builtin.set_fact:
        discovered_suid_sgid_files_flatten: "{{ discovered_suid_sgid_files.results | selectattr('stdout_lines', 'defined') | map(attribute='stdout_lines') | flatten }}"

    - name: "7.1.13 | Alert SUID executables exist"
      when:
        - discovered_suid_sgid_files_flatten | length > 0
        - not suid_sgid_adjust
      ansible.builtin.debug:
        msg:
          - "Warning!! You have SUID executables"
          - "The files are listed below, please confirm the integrity of these binaries"
          - "{{ discovered_suid_sgid_files_flatten }}"

    - name: "7.1.13 | Remove SUID bit"
      when:
        - suid_sgid_adjust
        - discovered_suid_sgid_files_flatten | length > 0
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 'u-s'
      with_items:
        - "{{ discovered_suid_sgid_files_flatten }}"