---

- name: "5.1.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  ansible.builtin.file:
    path: "/etc/ssh/sshd_config"
    owner: root
    group: root
    mode: 'go-rwx'
  when: rule_5_1_1

- name: "5.1.2 | PATCH | Ensure permissions on SSH private host key files are configured"
  block:
    - name: "5.1.2 | Find the SSH private host keys"
      ansible.builtin.find:
        paths: /etc/ssh
        patterns: 'ssh_host_*_key'
        recurse: true
        file_type: any
      register: discovered_ssh_private_host_key

    - name: "5.1.2 | Set permissions on SSH private host keys"
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: 'u-x,go-rwx'
      loop: "{{ discovered_ssh_private_host_key.files }}"
      loop_control:
        label: "{{ item.path }}"
  when: rule_5_1_2

- name: "5.1.3 | PATCH | Ensure permissions on SSH public host key files are configured"
  block:
    - name: "5.1.3 | Find the SSH public host keys"
      ansible.builtin.find:
        paths: /etc/ssh
        patterns: 'ssh_host_*_key.pub'
        recurse: true
        file_type: any
      register: discovered_ssh_public_host_key

    - name: "5.1.3 | Set permissions on SSH public host keys"
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: 'u-x,go-wx'
      loop: "{{ discovered_ssh_public_host_key.files }}"
      loop_control:
        label: "{{ item.path }}"
  when: rule_5_1_3

- name: "5.1.4 | PATCH | Ensure sshd Ciphers are configured"
  block:
    - name: "5.1.4 | Add submodule exclusion"
      ansible.builtin.template:
        src: "{{ ansible_dir }}/roles/harden_os/ubu22/templates/etc/crypto-policies/policies/modules/NO-SSHWEAKCIPHERS.pmod.j2"
        dest: /etc/crypto-policies/policies/modules/NO-SSHWEAKCIPHERS.pmod
        owner: root
        group: root
        mode: 'g-wx,o-rwx'

    - name: "5.1.4 | submodule to crypto policy modules"
      ansible.builtin.set_fact:
        crypto_policy_module: "{{ crypto_policy_module + ':NO-SSHWEAKCIPHERS' }}"
  when:
    - rule_5_1_4
    - "'NO-SSHWEAKCIPHERS' not in crypto_policy_module"

- name: "5.1.5 | PATCH | Ensure sshd KexAlgorithms is configured"
  block:
    - name: "5.1.5 | Add submodule exclusion"
      ansible.builtin.template:
        src: "{{ ansible_dir }}/roles/harden_os/ubu22/templates/etc/crypto-policies/policies/modules/NO-SHA1.pmod.j2"
        dest: /etc/crypto-policies/policies/modules/NO-SHA1.pmod
        owner: root
        group: root
        mode: 'g-wx,o-rwx'

    - name: "5.1.5 | submodule to crypto policy modules"
      ansible.builtin.set_fact:
        crypto_policy_module: "{{ crypto_policy_module + ':NO-SHA1' }}"
  when:
    - rule_5_1_5
    - "'NO-SHA1' not in crypto_policy_module"

- name: "5.1.6 | PATCH | Ensure sshd KexAlgorithms is configured"
  block:
    - name: "5.1.6 | Add submodule exclusion"
      ansible.builtin.template:
        src: "{{ ansible_dir }}/roles/harden_os/ubu22/templates/etc/crypto-policies/policies/modules/NO-SSHWEAKMACS.pmod.j2"
        dest: /etc/crypto-policies/policies/modules/NO-SSHWEAKMACS.pmod
        owner: root
        group: root
        mode: 'g-wx,o-rwx'

    - name: "5.1.6 | submodule to crypto policy modules"
      ansible.builtin.set_fact:
        crypto_policy_module: "{{ crypto_policy_module + ':' + 'NO-SSHWEAKMACS' }}"
  when:
    - rule_5_1_6
    - "'NO-SSHWEAKMACS' not in crypto_policy_module"

- name: "5.1.7 | PATCH | Ensure sshd access is configured"
  block:
    - name: "5.1.7 | Add line to sshd_config for allowusers"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: "^AllowUsers"
        line: "AllowUsers {{ sshd_allowusers }}"
        validate: sshd -t -f %s
      when: "sshd_allowusers | length > 0"

    - name: "5.1.7 | Add line to sshd_config for allowgroups"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: "^AllowGroups"
        line: "AllowGroups {{ sshd_allowgroups }}"
        validate: sshd -t -f %s
      when: "sshd_allowgroups | length > 0"

    - name: "5.1.7 | Add line to sshd_config for denyusers"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: "^DenyUsers"
        line: "DenyUsers {{ sshd_denyusers }}"
        validate: sshd -t -f %s
      when: "sshd_denyusers | length > 0"

    - name: "5.1.7 | Add line to sshd_config for denygroups"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: "^DenyGroups"
        line: "DenyGroups {{ sshd_denygroups }}"
        validate: sshd -t -f %s
      when: "sshd_denygroups | length > 0" 
  when: rule_5_1_7

- name: "5.1.8 | PATCH | Ensure sshd Banner is configured"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: '^Banner'
    line: 'Banner /etc/issue.net'
  when: rule_5_1_8

- name: "5.1.9 | PATCH | Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured"
  block:
    - name: "5.1.9 | Add line in sshd_config for ClientAliveInterval"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: '^ClientAliveInterval'
        line: "ClientAliveInterval {{ sshd_clientaliveinterval }}"
        validate: sshd -t -f %s

    - name: "5.1.9 | PATCH | Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured | Ensure SSH ClientAliveCountMax set to <= 3"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: '^ClientAliveCountMax'
        line: "ClientAliveCountMax {{ sshd_clientalivecountmax }}"
        validate: sshd -t -f %s
  when: rule_5_1_9

- name: "5.1.10 | PATCH | Ensure sshd DisableForwarding is enabled"
  block:
    - name: "5.1.10 | config file"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: ^(#|)\s*DisableForwarding
        line: 'DisableForwarding yes'
        validate: sshd -t -f %s

    - name: "5.1.10 | override"
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config.d/50-redhat.conf
        regexp: ^(?i)(#|)\s*X11Forwarding
        line: 'X11Forwarding {{ sshd_x11forwarding }}'
        validate: sshd -t -f %s
  when: rule_5_1_10

- name: "5.1.11 | PATCH | Ensure sshd GSSAPIAuthentication is disabled"
  block:
    - name: "5.1.11 | redhat file"
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config.d/50-redhat.conf
        regexp: ^(?i)(#|)\s*GSSAPIAuthentication
        line: GSSAPIAuthentication no
        validate: sshd -t -f %s

    - name: "5.1.11 | ssh config"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: ^(?i)(#|)\s*GSSAPIAuthentication
        line: GSSAPIAuthentication no
        validate: sshd -t -f %s
  when: rule_5_1_11

- name: "5.1.12 | PATCH | Ensure sshd HostbasedAuthentication is disabled"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*HostbasedAuthentication
    line: 'HostbasedAuthentication no'
    validate: sshd -t -f %s
  when: rule_5_1_12  

- name: "5.1.13 | PATCH | Ensure sshd IgnoreRhosts is enabled"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*IgnoreRhosts
    line: 'IgnoreRhosts yes'
    validate: sshd -t -f %s
  when: rule_5_1_13 

- name: "5.1.14 | PATCH | Ensure sshd LoginGraceTime is set to one minute or less"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*LoginGraceTime
    line: "LoginGraceTime {{ sshd_logingracetime }}"
    validate: sshd -t -f %s
  when: rule_5_1_14    

- name: "5.1.15 | PATCH | Ensure sshd LogLevel is appropriate"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*LogLevel
    line: 'LogLevel {{ ssh_loglevel }}'
    validate: sshd -t -f %s
  when: rule_5_1_15    

- name: "5.1.16 | PATCH | Ensure sshd MaxAuthTries is set to 4 or less"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: '^(#)?MaxAuthTries \d'
    line: 'MaxAuthTries {{ ssh_maxauthtries }}'
    validate: sshd -t -f %s
  when: rule_5_1_16    

- name: "5.1.17 | PATCH | Ensure sshd MaxStartups is configured"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*MaxStartups
    line: 'MaxStartups {{ ssh_maxstartups }}'
    validate: sshd -t -f %s
  when: rule_5_1_17    

- name: "5.1.18 | PATCH | Ensure SSH MaxSessions is set to 10 or less"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*MaxSessions
    line: 'MaxSessions {{ ssh_maxsessions }}'
    validate: sshd -t -f %s
  when: rule_5_1_18    

- name: "5.1.19 | PATCH | Ensure sshd PermitEmptyPasswords is disabled"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*PermitEmptyPasswords
    line: 'PermitEmptyPasswords no'
    validate: sshd -t -f %s
  when: rule_5_1_19    

- name: "5.1.20 | PATCH | Ensure sshd PermitRootLogin is disabled"
  block:
    - name: "5.1.20 | config file"
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_file }}"
        regexp: ^(?i)(#|)\s*PermitRootLogin
        line: 'PermitRootLogin no'
        validate: sshd -t -f %s

    - name: "5.1.20 | override file"
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-permitrootlogin.conf
        state: absent
  when: rule_5_1_20      

- name: "5.1.21 | PATCH | Ensure sshd PermitUserEnvironment is disabled"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*PermitUserEnvironment
    line: 'PermitUserEnvironment no'
    validate: sshd -t -f %s
  when: rule_5_1_21    

- name: "5.1.22 | PATCH | Ensure SSH PAM is enabled"
  ansible.builtin.lineinfile:
    path: "{{ sshd_config_file }}"
    regexp: ^(?i)(#|)\s*UsePAM
    line: 'UsePAM yes'
    validate: sshd -t -f %s
  when: rule_5_1_22    