---

# for 1.5
- name: "PRELIM | AUDIT | Check systemd coredump"
  ansible.builtin.stat:
    path: /etc/systemd/coredump.conf
  register: prelim_systemd_coredump

# for 1.8
- name: "PRELIM | Discover Gnome Desktop Environment"
  tags:
    - always
  ansible.builtin.stat:
    path: /usr/share/gnome/gnome-version.xml
  register: prelim_gnome_present

# for 3.1
- name: "PRELIM | AUDIT | Wireless adapter pre-requisites"
  when:
    - not system_is_container
  tags:
    - always
  block:
    - name: "PRELIM | AUDIT | Discover is wirelss adapter on system"
      ansible.builtin.command: find /sys/class/net/*/ -type d -name wireless
      register: discover_wireless_adapters
      changed_when: false
      failed_when: discover_wireless_adapters.rc not in [ 0, 1 ]

    - name: "PRELIM | PATCH | Install Network-Manager | if wireless adapter present"
      when:
        - discover_wireless_adapters.rc == 0
        - "'NetworkManager' not in ansible_facts.packages"
      ansible.builtin.package:
        name: NetworkManager
        state: present

- name: "PRELIM | AUDIT | Gather UID 0 accounts other than root"
  ansible.builtin.shell: "cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
  changed_when: false
  check_mode: false
  register: prelim_uid_zero_accounts_except_root

# for 5.4 and 7.2
- name: "PRELIM | 5.5.2 | 6.2.7 | 6.2.8 | 6.2.20 | Parse /etc/passwd"
  tags: always
  block:
    - name: "PRELIM | 5.5.2 | 6.2.7 | 6.2.8 | 6.2.20 | Parse /etc/passwd"
      ansible.builtin.command: cat /etc/passwd
      changed_when: false
      check_mode: false
      register: prelim_passwd_file_audit

    - name: "PRELIM | 5.5.2 | 6.2.7 | 6.2.8 | 6.2.20 | Split passwd entries"
      ansible.builtin.set_fact:
        passwd: "{{ prelim_passwd_file_audit.stdout_lines | map('regex_replace', ld_passwd_regex, ld_passwd_yaml) | map('from_yaml') | list }}"
      loop: "{{ prelim_passwd_file_audit.stdout_lines }}"
      vars:
        ld_passwd_regex: >-
          ^(?P<id>[^:]*):(?P<password>[^:]*):(?P<uid>[^:]*):(?P<gid>[^:]*):(?P<gecos>[^:]*):(?P<dir>[^:]*):(?P<shell>[^:]*)
        ld_passwd_yaml: |  # pragma: allowlist secret
          id: >-4
              \g<id>
          password: >-4
              \g<password>
          uid: \g<uid>
          gid: \g<gid>
          gecos: >-4
              \g<gecos>
          dir: >-4
              \g<dir>
          shell: >-4
              \g<shell>

