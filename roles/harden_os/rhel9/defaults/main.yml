---

## section 1.2
rule_1_2_1_1: true
rule_1_2_1_2: true
rule_1_2_1_3: true
rule_1_2_1_4: true
# dont run on an ec2
rule_1_2_2_1: true

## section 1.5
rule_1_5_1: true
rule_1_5_2: true
rule_1_5_3: true
rule_1_5_4: true

## section 1.6
rule_1_6_1: true
rule_1_6_2: true
rule_1_6_3: true
rule_1_6_4: true
rule_1_6_5: true
rule_1_6_6: true
rule_1_6_7: true

## section 1.7
rule_1_7_1: true
rule_1_7_2: true
rule_1_7_3: true
rule_1_7_4: true
rule_1_7_5: true
rule_1_7_6: true

## section 1.8
rule_1_8_1: true
rule_1_8_2: true
rule_1_8_3: true
rule_1_8_4: true
rule_1_8_5: true
rule_1_8_6: true
rule_1_8_7: true
rule_1_8_8: true
rule_1_8_9: true
rule_1_8_10: true

## section 2.4
rule_2_4_1_1: true
rule_2_4_1_2: true
rule_2_4_1_3: true
rule_2_4_1_4: true
rule_2_4_1_5: true
rule_2_4_1_6: true
rule_2_4_1_7: true
rule_2_4_1_8: true
rule_2_4_2_1: true

## section 3.1
rule_3_1_1: true
rule_3_1_2: true
rule_3_1_3: true

## section 3.2
rule_3_2_1: true
rule_3_2_2: true
rule_3_2_3: true
rule_3_2_4: true

##section 3.3
rule_3_3_1: true
rule_3_3_2: true
rule_3_3_3: true
rule_3_3_4: true
rule_3_3_5: true
rule_3_3_6: true
rule_3_3_7: true
rule_3_3_8: true
rule_3_3_9: true
rule_3_3_10: true
rule_3_3_11: true

## section 5.1
rule_5_1_1: true
rule_5_1_2: true
rule_5_1_3: true
rule_5_1_4: true
rule_5_1_5: true
rule_5_1_6: true
rule_5_1_7: true
rule_5_1_8: true
rule_5_1_9: true
rule_5_1_10: true
rule_5_1_11: true
rule_5_1_12: true
rule_5_1_13: true
rule_5_1_14: true
rule_5_1_15: true
rule_5_1_16: true
rule_5_1_17: true
rule_5_1_18: true
rule_5_1_19: true
rule_5_1_20: true
rule_5_1_21: true
rule_5_1_22: true

## section 5.2
rule_5_2_1: true
rule_5_2_2: true
rule_5_2_3: true
rule_5_2_4: true
rule_5_2_5: true
rule_5_2_6: true
rule_5_2_7: true

## section 5.3
rule_5_3_1_1: true
rule_5_3_1_2: true
rule_5_3_1_3: true
rule_5_3_2_1: true
rule_5_3_2_2: true
rule_5_3_2_3: true
rule_5_3_2_4: true
rule_5_3_2_5: true
rule_5_3_3_1_1: true
rule_5_3_3_1_2: true
rule_5_3_3_1_3: true
rule_5_3_3_2_1: true
rule_5_3_3_2_2: true
rule_5_3_3_2_3: true
rule_5_3_3_2_4: true
rule_5_3_3_2_5: true
rule_5_3_3_2_6: true
rule_5_3_3_2_7: true
rule_5_3_3_3_1: true
rule_5_3_3_3_2: true
rule_5_3_3_3_3: true
rule_5_3_3_4_1: true
rule_5_3_3_4_2: true
rule_5_3_3_4_3: true
rule_5_3_3_4_4: true

## section 5.4
rule_5_4_1_1: true
rule_5_4_1_2: true
rule_5_4_1_3: true
rule_5_4_1_4: true
rule_5_4_1_5: true
rule_5_4_1_6: true
rule_5_4_2_1: true
rule_5_4_2_2: true
rule_5_4_2_3: true
rule_5_4_2_4: true
rule_5_4_2_5: true
rule_5_4_2_5: true
rule_5_4_2_6: true
rule_5_4_2_7: true
rule_5_4_2_8: true
rule_5_4_3_1: true
rule_5_4_3_2: true
rule_5_4_3_3: true

## section 6.1
rule_6_1_1: true
# dont run on an ec2
rule_6_1_2: true
# dont run on an ec2
rule_6_1_3: true

## section 6.2
rule_6_2_1_1: true
rule_6_2_1_2: true
rule_6_2_1_3: true
rule_6_2_1_4: true
# dont run on 'log server'
rule_6_2_2_1_1: true
# dont run on 'log server'
rule_6_2_2_1_2: true
# dont run on 'log server'
rule_6_2_2_1_3: true
# dont run on 'log server'
rule_6_2_2_1_4: true
rule_6_2_2_2: true
rule_6_2_2_3: true
rule_6_2_2_4: true
rule_6_2_3_1: true
rule_6_2_3_2: true
rule_6_2_3_3: true
rule_6_2_3_4: true
rule_6_2_3_5: true
rule_6_2_3_6: true
rule_6_2_3_7: true
rule_6_2_3_8: true
rule_6_2_4_1: true


# section 6.3
rule_6_3_1_1: true
rule_6_3_1_2: true
rule_6_3_1_3: true
rule_6_3_1_4: true
rule_6_3_2_1: true
rule_6_3_2_2: true
rule_6_3_2_3: true
rule_6_3_2_4: true
rule_6_3_3_1: true
rule_6_3_3_2: true
rule_6_3_3_3: true
rule_6_3_3_4: true
rule_6_3_3_5: true
rule_6_3_3_6: true
rule_6_3_3_7: true
rule_6_3_3_8: true
rule_6_3_3_9: true
rule_6_3_3_10: true
rule_6_3_3_11: true
rule_6_3_3_12: true
rule_6_3_3_13: true
rule_6_3_3_14: true
rule_6_3_3_15: true
rule_6_3_3_16: true
rule_6_3_3_17: true
rule_6_3_3_18: true
rule_6_3_3_19: true
rule_6_3_3_20: true
rule_6_3_3_21: true
rule_6_3_4_1: true
rule_6_3_4_2: true
rule_6_3_4_3: true
rule_6_3_4_4: true
rule_6_3_4_5: true
rule_6_3_4_6: true
rule_6_3_4_7: true
rule_6_3_4_8: true
rule_6_3_4_9: true
rule_6_3_4_10: true

## section 7.1
rule_7_1_1: true
rule_7_1_2: true
rule_7_1_3: true
rule_7_1_4: true
rule_7_1_5: true
rule_7_1_6: true
rule_7_1_7: true
rule_7_1_8: true
rule_7_1_9: true
rule_7_1_10: true
rule_7_1_11: true
rule_7_1_12: true
rule_7_1_13: true

## section 7.2
rule_7_2_1: true
rule_7_2_2: true
rule_7_2_3: true
rule_7_2_4: true
rule_7_2_5: true
rule_7_2_6: true
rule_7_2_7: true
rule_7_2_8: true
rule_7_2_9: true

# for 1.2
# when installing RHEL from authorized Red Hat source, RHEL will come with default YUM repository. NOT having a default YUM
# repo ('rhel_default_repo' set as 'false'), in conjunction with 'rule_enable_repogpg' set as 'True', will enable the tasks
# which check the GPG signatures for all the individual YUM repositories.
rhel_default_repo: true

# for 1.2
# when 'rule_enable_repogpg' is set to 'true'(in conjunction with 'rhel_default_repo':'false'), conditions are met for
# enabling the GPG signatures-check for all the individual YUM repositories. If GPG signatures-check is enabled on repositories which do not
# support it(like RedHat), installation of packages will fail.
rule_enable_repogpg: true

# for 1.6
# this variable contains the value to be set as the system-wide crypto policy. Current rule enforces NOT USING
# 'LEGACY' value(as it is less secure, it just ensures compatibility with legacy systems), therefore
# possible values for this variable are, as explained by RedHat docs:
#  -'DEFAULT': reasonable default policy for today's standards (balances usability and security)
#  -'FUTURE': conservative security level that is believed to withstand any near-term future attacks
#  -'FIPS': A level that conforms to the FIPS140-2 requirements
crypto_policy: 'DEFAULT'

# for 1.6
# this variable contains the value of the crypto policy module(combinations of policies and
# sub-policies) to be allowed as default setting. Allowed options are defined in 'vars/main.yml' file,
# using 'allowed_crypto_policies_modules' variable.
crypto_policy_module: ''

# for 1.7
# specifies the warning banner displayed to the user
warning_banner: Authorized uses only. All activity may be monitored and reported.

# for 1.8
# determines if a gui is needed/used
gui: "{{ prelim_gnome_present.stat.exists | default(false) }}"

# for 1.8
# this variable specifies the GNOME configuration database file to which configurations are written.
# (See "https://help.gnome.org/admin/system-admin-guide/stable/dconf-keyfiles.html.en")
# The default database is 'local'.
dconf_db_name: local

# for 3.1, 3.3
# this variable governs whether ipv6 is enabled or disabled.
ipv6_required: true

# for 5.1
# this variable, if specified, configures a list of USER name patterns, separated by spaces, to allow SSH
# access for users whose user name matches one of the patterns. This is done
# by setting the value of `AllowUsers` option in `/etc/ssh/sshd_config` file.
# If an USER@HOST format will be used, the specified user will be allowed only on that particular host.
sshd_allowusers: "{% if ansible_facts.user_id != 'root' %}{{ ansible_facts.user_id }}{% elif ansible_env.SUDO_USER is defined %}{{ ansible_env.SUDO_USER }}{% endif %}"

# for 5.1
# (String) this variable, if specified, configures a list of GROUP name patterns, separated by spaces, to allow SSH access
# for users whose primary group or supplementary group list matches one of the patterns. This is done
# by setting the value of `AllowGroups` option in `/etc/ssh/sshd_config` file.
sshd_allowgroups: ""


# for 5.1
# this value, containing the absolute filepath of the produced 'sshd' config file, allows usage of
# drop-in files('/etc/ssh/ssh_config.d/{ssh_drop_in_name}.conf', supported by RHEL9) when CIS adopts them.
# Otherwise, the default value is '/etc/ssh/ssh_config'.
sshd_config_file: /etc/ssh/sshd_config

#for 5.1
# this variable, if specified, configures a list of USER name patterns, separated by spaces, to prevent SSH access
# for users whose user name matches one of the patterns. This is done
# by setting the value of `DenyUsers` option in `/etc/ssh/sshd_config` file.
# If an USER@HOST format will be used, the specified user will be restricted only on that particular host.
sshd_denyusers: "nobody"

# for 5.1
# this variable, if specified, configures a list of GROUP name patterns, separated by spaces,
# to prevent SSH access for users whose primary group or supplementary group list matches one of the patterns. This is done
# by setting the value of `DenyGroups` option in `/etc/ssh/sshd_config` file.
sshd_denygroups: ""

# for 5.1
# this variable sets the time interval in seconds between sending "keep-alive"
# messages from the server to the client. These types of messages are intended to
# keep the connection alive and prevent it being terminated due to inactivity.
sshd_clientaliveinterval: 15

# for 5.1
# this variable sets the maximum number of unresponsive "keep-alive" messages
# that can be sent from the server to the client before the connection is considered
# inactive and thus, closed.
sshd_clientalivecountmax: 3

# for 5.1
# by Default this will also disablex11 forwarding
# set 'yes' if x11 is required this can be changed to run in /etc/ssh/ssh_config.d/50-redhat.conf
sshd_x11forwarding: 'no'

# for 5.1
# this variable specifies the amount of seconds allowed for successful authentication to
# the SSH server.
sshd_logingracetime: 60

# for 5.1
# This variable is used to control the verbosity of the logging produced by the SSH server.
# The options for setting it are as follows:
# - `QUIET`: Minimal logging;
# - `FATAL`: logs only fatal errors;
# - `ERROR`: logs error messages;
# - `INFO`: logs informational messages in addition to errors;
# - `VERBOSE`: logs a higher level of detail, including login attempts and key exchanges;
# - `DEBUG`: generates very detailed debugging information including sensitive information.
# - `DEBUG(x)`: Whereas x = debug level 1 to 3, DEBUG=DEBUG1.
ssh_loglevel: INFO

# for 5.1
# the MaxAuthTries parameter specifies the maximum number of authentication
# attempts permitted per connection. When the login failure count reaches half the
# number, error messages will be written to the syslog file detailing the login failure.
ssh_maxauthtries: '4'

# for 5.1
# the MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.
ssh_maxstartups: '10:30:60'

# for 5.1
# this variable value specifies the maximum number of open sessions that are permitted from
# a given location
ssh_maxsessions: 4

# for 5.2
# by default, sudo logs through syslog(3). However, to specify a custom log file, the
# 'logfile' parameter will be used, setting it with current variable's value.
# This variable defines the path and file name of the sudo log file.
sudolog_location: "/var/log/sudo.log"

# for 5.2
# This will leave NOPASSWD intact for these users
sudoers_exclude_nopasswd_list:
  - ec2-user
  - vagrant

# for 5.2
# this variable sets the duration (in minutes) during which a user's authentication credentials
# are cached after successfully authenticating using "sudo". This allows the user to execute
# multiple commands with elevated privileges without needing to re-enter their password for each
# command within the specified time period. CIS requires a value of at most 15 minutes.
sudo_timestamp_timeout: 15

# for 5.2
# This variable determines the name of the group of users that are allowed to use the su command.
# CIS requires that such a group be CREATED(named according to site policy) and be kept EMPTY.
sugroup: sugroup

# for 5.3
# fo not use authselect if:
# your host is part of Linux Identity Management.
# joining your host to an IdM domain with the ipa-client-install command automatically configures SSSD authentication on your host.
# your host is part of Active Directory via SSSD.
# calling the realm join command to join your host to an Active Directory domain automatically configures SSSD authentication on your host.
allow_authselect_updates: true
##
authselect_pkg_update: false  # NOTE the risks if system is using SSSD or using ipa-client-install

# for 5.3
# run tests that are considered higher risk and could have a system impact if not properly tested
# default false
# will be fine if clean new unconfigured build
disruption_high: false

# for 5.3
# this variable configures the name of the custom profile to be created and selected.
# to be changed from default - cis_example_profile
authselect_custom_profile_name: she_cc_on_my_till_i_dc
# name of the existing authselect profile to copy - options can be found with
# ```authselect list``` on the host to be configured
authselect_default_profile_to_copy: "sssd --symlink-meta"

# for 5.3
# this variable sets the amount of tries a password can be entered, before a user is locked.
pam_faillock_deny: 5

# for 5.3
# this variable sets the amount of time a user will be unlocked after the max amount of
#   password failures.
pam_faillock_unlock_time: 900

# for 5.3
# pamroot_lock_option options are
# even_deny_root
# root_unlock_time = {{ root_unlock_time }}
root_unlock_time: 60
pamroot_lock_option: even_deny_root
# pamroot_lock_option: "root_unlock_time = {{ root_unlock_time }}"

# for 5.3
passwd_difok_file: etc/security/pwquality.conf.d/50-pwdifok.conf  # pragma: allowlist secret
passwd_difok_value: 2

# for 5.3
passwd_minlen_file: etc/security/pwquality.conf.d/50-pwlength.conf  # pragma: allowlist secret
passwd_minlen_value: 14

#for 5.3
passwd_complex_file: etc/security/pwquality.conf.d/50-pwcomplexity.conf  # pragma: allowlist secret
# choose if using minclass or credits options
# options are: minclass or credits
# ensure only one is selected
passwd_complex_option: minclass  # pragma: allowlist secret
passwd_minclass: 3
# passwd_complex: credits
passwd_dcredit: -1
passwd_ucredit: -2
passwd_ocredit: 0
passwd_lcredit: -2

# for 5.3
passwd_maxrepeat_file: etc/security/pwquality.conf.d/50-pwrepeat.conf  # pragma: allowlist secret
passwd_maxrepeat_value: 3

# for 5.3
passwd_maxsequence_file: etc/security/pwquality.conf.d/50-pwmaxsequence.conf  # pragma: allowlist secret
passwd_maxsequence_value: 3

# for 5.3
passwd_dictcheck_file: etc/security/pwquality.conf.d/50-pwdictcheck.conf  # pragma: allowlist secret
passwd_dictcheck_value: 1

# for 5.3
passwd_quality_enforce_root_file: etc/security/pwquality.conf.d/50-pwroot.conf  # pragma: allowlist secret
passwd_quality_enforce_root_value: enforce_for_root  # pragma: allowlist secret

# for 5.3
# pamd_pwhistory_remember: <N> -  <N> is the number of old passwords to remember
pamd_pwhistory_remember: 24

# for 5.3
# name of file for the pam history file
pam_pwhistory_file: 'pwhistory'

# for 5.3
# path to find templates and where to put file for pam-auth
pam_confd_dir: 'usr/share/pam-configs/'

# for 5.3
passwd_hash_algo: sha512  # pragma: allowlist secret

# for 5.4
pass:
  max_age: 365
  min_age: 7
  warn_age: 7
# this variable governs after how many days a password expires.
# CIS requires a value of 365 or less.
pass_max_days: 365
# this variable specifies the minimum number of days allowed between changing
# passwords. CIS requires a value of at least 1.
pass_min_days: 7
# this variable governs, how many days before a password expires, the user will be warned.
# CIS requires a value of at least 7.
pass_warn_age: 7

# for 5.4
# this can break current connecting user access
force_user_mindays: false
# this can break current connecting user access
force_user_warnage: false

# for 5.4
inactivelock:
  # this variable specifies the number of days of inactivity before an account will be locked.
  # CIS requires a value of 30 days or less.
  lock_days: 30

# for 5.4
# allow ansible to expire password for account with a last changed date in the future. Setting it
# to 'false' will just display users in violation, while 'true' will expire those users passwords.
futurepwchgdate_autofix: true

# for 5.4
root_umask: '0027'  # 0027 or more restrictive
bash_umask: '0027' # 0027 or more restrictive

# for 5.4
# The system users on this list are allowed to have a shell (e.g. applications
# that require a shell to function)
system_users_shell: []

# for 5.4
# this dictionary is related to ensuring the rule about user shell timeout
# this variable represents the amount of seconds a command or process is allowed to
# run before being forcefully terminated.
# CIS requires a value of at most 900 seconds.
shell_session_timeout: 900
# this variable specifies the path of the timeout setting file.
# (TMOUT setting can be set in multiple files, but only one is required for the
# rule to pass. Options are:
# - a file in `/etc/profile.d/` ending in `.s`,
# - `/etc/profile`, or
# - `/etc/bash.bashrc`.
shell_session_file: /etc/profile.d/tmout.sh

# for 6.1
# AIDE is a file integrity checking tool, similar in nature to Tripwire.
# while it cannot prevent intrusions, it can detect unauthorized changes
# to configuration files by alerting when the files are changed. Review
# the AIDE quick start guide and AIDE documentation before proceeding.
# by setting this variable to `true`, all of the settings related to AIDE will be applied!
config_aide: true
# allows to change db file, not config need to be adjusted too
aide_db_file: /var/lib/aide/aide.db.gz
# if DB file older than below will automatically rebuild DB
# e.g. options:1w = 1 week, 1d = 1day 1h = 1 hour
aide_db_file_age: 1w
# if aide already setup this forces a new DB to be created
aide_db_recreate: false
# how the aide schedule is run either cron or timer
aide_scan: cron

aide_cron:
  # This variable represents the user account under which the cron job for AIDE will run.
  cron_user: root
  # This variable represents the path to the AIDE crontab file.
  cron_file: /etc/cron.d/aide_cron
  # This variable represents the actual command or script that the cron job
  # will execute for running AIDE.
  aide_job: '/usr/sbin/aide --check'
  # These variables define the schedule for the cron job
  # This variable governs the minute of the time of day when the AIDE cronjob is run.
  # It must be in the range `0-59`.
  aide_minute: 0
  # This variable governs the hour of the time of day when the AIDE cronjob is run.
  # It must be in the range `0-23`.
  aide_hour: 5
  # This variable governs the day of the month when the AIDE cronjob is run.
  # `*` signifies that the job is run on all days; furthermore, specific days
  # can be given in the range `1-31`; several days can be concatenated with a comma.
  # The specified day(s) can must be in the range  `1-31`.
  aide_day: '*'
  # This variable governs months when the AIDE cronjob is run.
  # `*` signifies that the job is run in every month; furthermore, specific months
  # can be given in the range `1-12`; several months can be concatenated with commas.
  # The specified month(s) can must be in the range  `1-12`.
  aide_month: '*'
  # This variable governs the weekdays, when the AIDE cronjob is run.
  # `*` signifies that the job is run on all weekdays; furthermore, specific weekdays
  # can be given in the range `0-7` (both `0` and `7` represent Sunday); several weekdays
  # can be concatenated with commas.
  aide_weekday: '*'

# for 6.2
# rreferred method of logging
# whether rsyslog or journald preferred method for local logging
# configure rsyslog
# configure journald
# this variable governs which logging service should be used, choosing between 'rsyslog'(CIS recommendation)
# or 'journald'(only one is implemented) will trigger the execution of the associated subsection, as the-best
# practices are written wholly independent of each other.
syslog: journald

# for 6.2
# this variable governs if 'rsyslog' service should be automatically configured to forward messages to a
# remote log server. If set to 'false', the configuration of the 'omfwd' plugin, used to provide forwarding
# over UDP or TCP, will not be performed.
remote_log_server: false
# this variable specifies the path to the private key file used by the remote journal
# server to authenticate itself to the client. This key is used alongside the server's
# public certificate to establish secure communication.
journal_upload_serverkeyfile: "/etc/ssl/private/journal-upload.pem"
# This variable specifies the path to the public certificate file of the remote journal
# server. This certificate is used to verify the authenticity of the remote server.
journal_servercertificatefile: "/etc/ssl/certs/journal-upload.pem"
# This variable specifies the path to a file containing one or more public certificates
# of certificate authorities (CAs) that the client trusts. These trusted certificates are used
# to validate the authenticity of the remote server's certificate.
journal_trustedcertificatefile: "/etc/ssl/ca/trusted.pem"
# ATTENTION: Uncomment the keyword below when values are set!

# for 6.2
# this variable governs if current Ansible role should manage syslog settings
# in /etc/rsyslog.conf file, namely mail, news and misc(warn, messages)
rsyslog_ansiblemanaged: true

# for 6.2
# this variable governs if 'rsyslog' service should be automatically configured to forward messages to a
# remote log server. If set to 'false', the configuration of the 'omfwd' plugin, used to provide forwarding
# over UDP or TCP, will not be performed.
remote_log_server: false
# this variable configures the value of the 'target' parameter to be configured when enabling
# forwarding syslog messages to a remote log server, thus configuring the actual FQDN/IP address of the
# destination server. For this value to be reflected in the configuration, the variable which enables the
# automatic configuration of rsyslog forwarding must be enabled('remote_log_server: true').
remote_log_host: logagg.example.com
# this variable configures the value of the 'port' parameter to be configured when enabling
# forwarding syslog messages to a remote log server. The default value for this destination port is 514.
# For this value to be reflected in the configuration, the variable which enables the
# automatic configuration of rsyslog forwarding must be enabled('remote_log_server: true').
remote_log_port: 514
## Control 6.2.3.6 - Ensure rsyslog is configured to send logs to a remote log host
# This variable configures the value("TCP"/"UDP") of the 'protocol' parameter to be configured when enabling
# forwarding syslog messages to a remote log server. The default value for the 'omfwd' plug-in is UDP.
# For this value to be reflected in the configuration, the variable which enables the
# automatic configuration of rsyslog forwarding must be enabled('remote_log_server: true').
remote_log_protocol: tcp
## Control 6.2.3.6 - Ensure rsyslog is configured to send logs to a remote log host
# This variable governs how often an action is retried(value is passed to 'action.resumeRetryCount' parameter) before
# it is considered to have failed(that roughly translates to discarded messages). The default value is 0, but
# when set to "-1"(eternal), this setting would prevent rsyslog from dropping messages when retrying to connect
# if server is not responding. For this value to be reflected in the configuration, the variable which enables the
# automatic configuration of rsyslog forwarding must be enabled('remote_log_server: true').
remote_log_retrycount: 100
## Control 6.2.3.6 - Ensure rsyslog is configured to send logs to a remote log host
# This variable configures the maximum number of messages that can be hold(value is passed to 'queue.size' parameter).
# For this value to be reflected in the configuration, the variable which enables the automatic configuration
# of rsyslog forwarding must be enabled('remote_log_server: true').
remote_log_queuesize: 1000

# for 6.3
# this variable represents the audit backlog limit, i.e., the maximum number of audit records that the
# system can buffer in memory, if the audit subsystem is unable to process them in real-time.
# buffering in memory is useful in situations, where the audit system is overwhelmed
# with incoming audit events, and needs to temporarily store them until they can be processed.
# this variable should be set to a sufficient value. The CIS baseline recommends at least `8192` as value.
audit_back_log_limit: 8192

# for 6.3
# this variable specifies the maximum size in MB that an audit log file can reach
# before it is archived or deleted to make space for the new audit data.
# this should be set based on your sites policy. CIS does not provide a specific value.
auditd_max_log_file_size: 10

# for 6.3
# this variable determines what action the audit system should take when the maximum
# size of a log file is reached.
# the options for setting this variable are as follows:
# - `ignore`: the system does nothing when the size of a log file is full;
# - `syslog`: a message is sent to the system log indicating the problem;
# - `suspend`: the system suspends recording audit events until the log file is cleared or rotated;
# - `rotate`: the log file is rotated (archived) and a new empty log file is created;
# - `keep_logs`: the system attempts to keep as many logs as possible without violating disk space constraints.
# CIS prescribes the value `keep_logs`.
auditd_max_log_file_action: keep_logs

# for 6.3
# this variable determines how the system should act in case of issues with disk
# the disk_full_action parameter tells the system what action to take when no free space is available on the partition that holds the audit log files.
# valid values are ignore, syslog, rotate, exec, suspend, single, and halt.
#
# the disk_error_action parameter tells the system what action to take when an error is detected on the partition that holds the audit log files.
# valid values are ignore, syslog, exec, suspend, single, and halt.
#
# CIS prescribes
# disk_full_action parameter:
# set to halt - the auditd daemon will shutdown the system when the disk partition containing the audit logs becomes full.
# set to single - the auditd daemon will put the computer system in single user mode when the disk partition containing the audit logs becomes full.
#
# disk_error_action parameter:
# set to halt - the auditd daemon will shutdown the system when an error is detected on the partition that holds the audit log files.
# set to single - the auditd daemon will put the computer system in single user mode when an error is detected on the partition that holds the audit log files.
# set to syslog - the auditd daemon will issue no more than 5 consecutive warnings to syslog when an error is detected on the partition that holds the audit log files.
auditd_disk_full_action: halt
auditd_disk_error_action: syslog

# for 6.3
# Wait to do when space left is low.
# The space_left_action parameter tells the system what action to take when the system has detected that it is starting to get low on disk space.
# Valid values are ignore, syslog, rotate, email, exec, suspend, single, and halt.
# The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space.
# Valid values are ignore, syslog, rotate, email, exec, suspend, single, and halt.
auditd_space_left_action: email
auditd_admin_space_left_action: halt

# for 6.3
# this can be used to configure other keys in auditd.conf
# example:
auditd_extra_conf:
  admin_space_left: '10%'
# this value governs if the below extra-vars for auditd should be used by the role
auditd_extra_conf_usage: false

# for 7.1
# allow ansible to adjust world-writable files. False will just display world-writable files, True will remove world-writable.
no_world_write_adjust: true

# for 7.1
# ensure no files or directories without an owner and a group exist
exclude_unowned_search_path: (! -path "/run/user/*" -a ! -path "/proc/*" -a ! -path "*/containerd/*" -a ! -path "*/kubelet/pods/*" -a ! -path "*/kubelet/plugins/*" -a ! -path "/sys/fs/cgroup/memory/*" -a ! -path "/var/*/private/*")

# for 7.1
# this variable is a toggle for enabling/disabling the automated
# setting of an owner (specified in variable `unowned_owner`)
# for all unowned files and directories.
# possible values are `true` and `false`.
ownership_adjust: true

# for 7.1
# This variable is a toggle for enabling/disabling the automated removal
# of the SUID bit from all files on all mounts.
# Possible values are `true` and `false`.
suid_sgid_adjust: false