---
# change this to find all users with a shell (look for any shell in /etc/shells) and exclude blueteam
- name: Get users
  getent:
    database: passwd
  register: users

- name: Get shells
  ansible.builtin.shell: cat /etc/shells | tail -n +2 # skip the first line
  register: shells

- name: Find users with a shell (in /etc/shells) and exclude specific users
  set_fact:
    users_with_valid_shell: >
      {{
        users.passwd |
        selectattr('shell', 'in', shells.stdout_lines) |
        rejectattr('name', 'in', ['blueteam', 'blackteam', 'whiteteam', 'black_team', 'white_team']) |
        map(attribute='name') |
        list
      }}

- name: Debug users with valid shells
  debug:
    msg: "Users with valid shells (excluding specified users): {{ users_with_valid_shell }}"
  register: user_list

- name: Generate and set passwords/Display generated passwords
  ansible.builtin.block:
    - name: Generate and set passwords
      ansible.builtin.user:
        name: "{{ item }}"
        password: "{{ lookup('ansible.builtin.password', 'length=12') }}"
      loop: "{{ user_list.stdout_lines }}"
      register: user_password
      loop_control:
        label: "{{ item }}"

  - name: Display generated passwords
    ansible.builtin.debug:
      sg: "User: {{ item.item }}, Password: {{ item.password }}"
    loop: "{{ user_password.results }}"

    # output every user and password combo to /tmp file, copy that file to ansible controller, then remove it

#TODO once we install bin/redd well change /sbin/nologin to /bin/redd
- name: Deactivate each user by setting their shell to /sbin/nologin
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /sbin/nologin
  loop: "{{ deactivate_user_list.stdout_lines }}"

- name: Move all ssh authorized keys to quarantine
  ansible.builtin.shell: |
    mv /home/{{ item }}/.ssh/authorized_keys {{ quarantine }}/authorized_keys_{{ item }}
  loop: "{{ user_list.stdout_lines }}"
  